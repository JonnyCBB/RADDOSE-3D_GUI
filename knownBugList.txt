####################################################
######### RADDOSE-3D GUI KNOWN BUG LIST  ###########
####################################################

Add any spotted bugs as they are found upon GUI testing:

- Beam name is not given in the summary window when an experiment is run. Also
 the formatting can be improved too.

- If no beams or crystals have been selected from the lists and you click the
"View" button, it doesn't return any message to the User. Need to fix this!

- Allows you to try to run RADDOSE-3D even when a crystal object hasn't been
loaded into the "Choose a crystal" frame

- currently if faulty premade RD3D input file run - RD3D will crash and then crystal/beam
objects will try to be made - any suitable objects (after checks performed) will be added to
interface, whereas the faulty objects will not be included -- not really a bug, but do we want
this? Or should a bad RD3D run just kill the method before any objects are made?

- ********************************************************************
BIG BUG
Input parser fails for Input files that would work when run on command
line :-( - I have this too, it is to do with several things I have noticed:
a) if a full line is commented, it removes this comment and then the line is blank, which crashes
b) if crystal type is polyhedron with obj file and no dimensions, currently can't handle since
there is no crystal obj file property and crystal dimensions are always assumed to be present :-(
Do you see any trends between RD3D input files failing and inputs Jonny?

- I have the command line error:

InputException: Parser found 1 error in input:
RADDOSE-3D-input.txt line 8:0 extraneous input 'SolventFraction' expecting FLOAT
Unhandled input exception InputException: Parser found 1 errors in input:
RADDOSE-3D-input.txt line 8:0 extraneous input 'SolventFraction' expecting FLOAT

Is this a GUI error or a RD3D input file error? I can't tell..

RD3D output log says: Solvent fraction determined as NaN%.
RD3D input file has: SolventFraction 0.5

- Not sure if this is a true bug or not: if a user loads a crysta from a RD3D input file
with type = polyhedron but dimensions entered instead of modelfile input, then the crystal
checks will not pick this up and the RD3D input parser will crash. Hopefully users will enter
correct input types for each crystal type.. a separate input file checker could be written to 
first check whether the correct input names are provided for each crystal type, but this seems 
overkill at this point..


