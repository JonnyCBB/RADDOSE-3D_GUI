####################################################
########### RADDOSE-3D GUI TO DO LIST  #############
####################################################


-***************************-
To do before release (Aim for August 1st)
-***************************-

- Checks for inputs in a pre-made RADDOSE-3D file (CSB) - Mostly finished

- Create user guide (JBB + CSB LATER)

- Check GUI works on Windows, Linux (diamond UNIX distribution mainly) and Mac.
(JBB (Win + Linux) + CSB (Mac) LATER - once it's complete)

- Add warnings as well as the current checks for crystals/beam classes (CSB)

- If the same pre-made input file is loaded twice then the crystals and beams
with the same names are loaded twice. - want to be able to have same crystal loaded
twice, but names MUST be different & have a warning if an identical crystal has been
loaded (CSB) - Mostly finished

- Input parser needs fixing so that it doesn't moan when a valid RADDOSE-3D input
file is specified.

- Display Summary/View window should show all populated object attributes. An
example where this fails is when I create a crystal and specify a sequence file.
When I click "View" it doesn't show the sequence file that I selected.


-***************************-
Fairly soon but not too urgently (i.e. not necessarily for first beta release)
-***************************-

- "crystals" class needs updating to allow crystal objects to be created with
model/geometry files.

- If incomplete input files should be able to be read into the GUI and the
corresponding fields should be automatically populated.

- If premade input files require more than one experimental beam as input
RADDOSE-3D GUI will not read read them. This should be sorted at some point
(JBB).

- When you switch between experiments in the summary window the display
summary should automatically update.


-***************************-
To do at some point
-***************************-
- Currently experimental beam type collimation inputs from beam maker window are not
passed to beam objects and are lost. Should these be passed through, even though RD3D
does not need them? Leave them for now. I need to check that RADDOSE-3D doesn't
do anything to the experimental beam image if collimation is set. Shouldn't be a
problem yet since at diamond the image is taken after the slits and hence the
image should already be collimated, hence why this isn't immediate.

- Add toolbar buttons at top of GUI window (e.g. File, View, Save, etc.)

- Mixture list should appear in alphabetical order

- Sort out the resolution problem: What voxel resolution is required for
 sufficient convergence?

 - Sort out optimisation problem: What offset to pick to get max DDE?

 - Visualisation of the experiment so user can see what is going on.

 - change %s syntax to .format() throughout for consistency

- sort out how container info passed to crystal class - is a dictionary really
the easiest way?

- Need to complete help.py class (the interactive help box). This will be best
once all the other input sections are completed

- When user types incompatible data format into a field and clicks 'make', the
input window moves to the back of the screen. We should try to find out how to
keep it at the front of the screen.

- input parser shouldn't crash if certain inputs aren't supplied. Currently the
input parser throws an error if the "dimensions" line hasn't been specified when
the crystal type is cuboid (this could be the case for other types but I haven't
checked this). So to avoid the problem I have surrounded this call with a "try"
statement. All this does is tell the user that something may be wrong with their
input file if the parser doesn't work. This also means that RADDOSE-3D is not
run if the GUI doesn't understand the input file, not RADDOSE-3D which I don't
think is ideal. Ideally we wouldn't want the parser to throw an error if this is
 the case, rather we would prefer the parser to tell the ser that there may be a
problem with the input file.

- Fix X and Y scrollbar positions so they don't overlap.

- Perhaps resize text when window is resized so the text doesn't get cut off.
I've added a "DynamicLabel" in the customMadeWidgets file but it seems to be too
slow at resizing the text.

- Allow more input options in the beam Maker window so that users can choose how
they would like their beam image/aperture measurment to be processed into a
RADDOSE-3D compatible format.

- On of the blocks of code in the guiRun.py file reads:
"if len(self.beamList2Run) != len(self.wedgeList2Run):
    print 'Inconsistent numbers of beam and wedges to be written to RADDOSE-3D input file'
    print '---> terminating script'
    sys.exit()"
We should probably think of a way to warn the user that something is wrong
without closing the entire application.
