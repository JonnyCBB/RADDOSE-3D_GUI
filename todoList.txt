####################################################
########### RADDOSE-3D GUI TO DO LIST  #############
####################################################


-***************************-
To do before release (Aim for August 1st)
-***************************-

- add functionaility to save summary of compared experiments currently loaded within
summary window - Do we want CSV format for output? (JBB)

- Checks for inputs in a pre-made RADDOSE-3D file (CSB)

- Need to add a check when experiments are run to see if any files are already
in use by other programs.(JBB)

- Create user guide (JBB + CSB LATER)

- check cross platform image functionality (pkg PIL runs into problems on anaconda
python 2.7.9 on mac). Need to test on ubuntu also... Try dials.python and logging into DLS (JBB)

- When users change option in drop down list in crystalMaker/BeamMaketr/StrategyMaker windows
they should retain the values in the fields that they have already entered in as
opposed to setting the values to some default (often .set("0")) (CSB)

- Add units to the crystal input labels - or remove?? Also add titles to help input text (JBB)

- Make sure that the default values for any inputs that are optional but left
null are the same as those specified in the RADDOSE-3D user manual. (JBB)

- Make sure that the GUI reads integers as well as floats for fields that
require floating point values. (CSB)

- Add additional crystal/beam class checks (CSB)

- Add warnings as well as the current checks for crystals/beam classes (CSB)

-Some of the help text isn't formatted properly (there are hidden characters
which don't show up in the editor but appear in the GUI). Need to get rid of
these. - Jonny do you mean in the help summary box or the hovering boxes? I mean
in the hovering boxes. I copy pasted some of the text from a pdf file and there
are hidden characters showing up! (JBB)

-In guiRun.py, when a beam is loaded from a premade RD3D input file, it is created
using the 'beams' class - this needs to be updated to instead use beams subclasses,
dependent on which beam type is present (CSB)

- Similarly to above, when a crystal is loaded from a premade RD3D input file, need
to ensure correct crystal subclasses are used when creating new crystal objects (CSB)

- Do the parsers handle container information correctly when reading from premade RD3D
input files and creating crystal objects? Need to check this! (CSB)

- Sort out GUI so it adjusts to the correct size for the screen that it's being
displayed on. Also work out how to scale summary text box with screen & frame sizes (JBB)

- Perhaps change font of summary window output to see if that fixes the
formatting issue (JBB)

- Add experimental beam image file converter code (JBB)

- Currently user can only load in input file if they want to run an experiment.
However they may also have other files that need to be loaded (e.g. model
geometry file or experimental beam file). We need to work out a way that the
RADDOSE-3D GUI can read these when necessary to run RADDOSE-3D. (JBB)

- If the same pre-made input file is loaded twice then the crystals and beams
with the same names are loaded twice. - want to be able to have same crystal loaded
twice, but names MUST be different & have a warning if an identical crystal has been
loaded (JBB)

-***************************-
To do at some point
-***************************-

- Add toolbar buttons at top of GUI window (e.g. File, View, Save, etc.)

- Mixture list should appear in alphabetical order

- Sort out the resolution problem: What voxel resolution is required for
 sufficient convergence?

 - Sort out optimisation problem: What offset to pick to get max DDE?

 - Visualisation of the experiment so user can see what is going on.

 - change %s syntax to .format() throughout for consistency

- sort out how container info passed to crystal class - is a dictionary really
the easiest way?

-Need to complete help.py class (the interactive help box). This will be best
once all the other input sections are completed
